
************************************ Overview ************************************ 
This Python script is designed to recover the AES key used for encryption and subsequently decrypt a specific ciphertext.
The recovery process involves generating and testing various key combinations until a match is found, enabling the decryption of a hidden message.

************************************ File Structure ************************************ 
-> solution1.py: The main Python script.
-> aesLongKeyGen24.py: Python file handling key expansion.
-> aesCiphertexts.txt: File containing the ciphertexts used for key recovery.
-> aesPlaintexts.txt: File containing the corresponding plaintexts.
-> aesSecretMessage.txt: File where the decrypted message will be saved.

************************************ Run the script ************************************ 
python solution1.py

************************************ Working ************************************ 
-> The script begins by importing necessary libraries, including the cryptography library for AES operations, and a custom module (aesLongKeyGen24) for key generation.
-> The ciphertexts and plaintexts are read from external files (aesCiphertexts.txt and aesPlaintexts.txt respectively). The content is stored in lists (cipher and messages).
-> Two functions (AES_enc and AES_dec) are defined for AES encryption and decryption, utilizing the CBC mode with a provided Initialization Vector (iv).
-> The script generates an exhaustive list of byte combinations, each comprising three bytes, covering all possibilities within the range of 0 to 255 and store it in a list.
-> The script then iterates through the generated byte combinations, attempting to find a key that produces ciphertexts matching the provided ones. 
-> This is achieved by encrypting the first four messages using the generated key and comparing the results with the given ciphertexts.
-> The decrypted message is then written to a file named aesSecretMessage.txt.
-> Finally, the script measures and prints the total running time from start to finish.

************************************ View the result ************************************ 
The script will output information during its execution.
The recovered key and decrypted message will be saved in aesSecretMessage.txt.